{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Pictures\\\\Screenshots\\\\vs code\\\\patient-requisition-full-app\\\\frontend\\\\src\\\\pages\\\\PatientDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, CircularProgress, Paper, Snackbar, Alert } from '@mui/material';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [visitLoading, setVisitLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  useEffect(() => {\n    apiService.request(`/patients/${id}`).then(setPatient).catch(() => setPatient(null)).finally(() => setLoading(false));\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (!patient) return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Patient not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => navigate('/patients'),\n      children: \"Back to Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: patient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Email: \", patient.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Phone: \", patient.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Gender: \", patient.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Date of Birth: \", patient.dateOfBirth ? new Date(patient.dateOfBirth).toLocaleDateString() : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Status: \", patient.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Address: \", patient.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Medical History: \", patient.medicalHistory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientDetails, \"qsgCL8YDlwcd55igbwHveC33eUs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientDetails;\nexport default PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Box","Typography","Button","CircularProgress","Paper","Snackbar","Alert","apiService","jsxDEV","_jsxDEV","PatientDetails","_s","id","navigate","patient","setPatient","loading","setLoading","visitLoading","setVisitLoading","snackbar","setSnackbar","open","message","severity","request","then","catch","finally","p","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","sx","mt","name","email","phone","gender","dateOfBirth","Date","toLocaleDateString","status","address","medicalHistory","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Pictures/Screenshots/vs code/patient-requisition-full-app/frontend/src/pages/PatientDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Box, Typography, Button, CircularProgress, Paper, Snackbar, Alert } from '@mui/material';\r\nimport apiService from '../services/api';\r\n\r\nconst PatientDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [patient, setPatient] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [visitLoading, setVisitLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  useEffect(() => {\r\n    apiService.request(`/patients/${id}`)\r\n      .then(setPatient)\r\n      .catch(() => setPatient(null))\r\n      .finally(() => setLoading(false));\r\n  }, [id]);\r\n\r\n  if (loading) return <Box p={3}><CircularProgress /></Box>;\r\n  if (!patient) return <Box p={3}><Typography>Patient not found.</Typography></Box>;\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Button variant=\"outlined\" onClick={() => navigate('/patients')}>Back to Patients</Button>\r\n      <Paper sx={{ p: 3, mt: 2 }}>\r\n        <Typography variant=\"h4\">{patient.name}</Typography>\r\n        <Typography>Email: {patient.email}</Typography>\r\n        <Typography>Phone: {patient.phone}</Typography>\r\n        <Typography>Gender: {patient.gender}</Typography>\r\n        <Typography>Date of Birth: {patient.dateOfBirth ? new Date(patient.dateOfBirth).toLocaleDateString() : 'N/A'}</Typography>\r\n        <Typography>Status: {patient.status}</Typography>\r\n        <Typography>Address: {patient.address}</Typography>\r\n        <Typography>Medical History: {patient.medicalHistory}</Typography>\r\n        {/* Add more fields as needed */}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PatientDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}