{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Pictures\\\\Screenshots\\\\vs code\\\\patient-requisition-full-app\\\\frontend\\\\src\\\\pages\\\\Patients.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Button,\n//   TextField,\n//   Card,\n//   CardContent,\n//   Grid,\n//   Chip,\n//   IconButton,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   Pagination,\n//   Avatar,\n//   Tooltip,\n//   Accordion,\n//   AccordionSummary,\n//   AccordionDetails,\n//   List,\n//   ListItem,\n//   ListItemText,\n//   Divider,\n//   CircularProgress\n// } from '@mui/material';\n// import {\n//   Add as AddIcon,\n//   Edit as EditIcon,\n//   Delete as DeleteIcon,\n//   Visibility as ViewIcon,\n//   Search as SearchIcon,\n//   FilterList as FilterIcon,\n//   Person as PersonIcon,\n//   Phone as PhoneIcon,\n//   Email as EmailIcon,\n//   LocationOn as LocationIcon,\n//   MedicalServices as MedicalIcon,\n//   ExpandMore as ExpandMoreIcon,\n//   Add as AddTreatmentIcon\n// } from '@mui/icons-material';\n// import { useNavigate } from 'react-router-dom';\n// import apiService from '../services/api';\n// import Snackbar from '@mui/material/Snackbar';\n// import Alert from '@mui/material/Alert';\n\n// function getAge(dateOfBirth) {\n//   if (!dateOfBirth) return 'N/A';\n//   const dob = new Date(dateOfBirth);\n//   const diffMs = Date.now() - dob.getTime();\n//   const ageDt = new Date(diffMs);\n//   return Math.abs(ageDt.getUTCFullYear() - 1970);\n// }\n\n// function Patients() {\n//   const [patients, setPatients] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [statusFilter, setStatusFilter] = useState('');\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n//   const [selectedPatient, setSelectedPatient] = useState(null);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [openDialog, setOpenDialog] = useState(false);\n//   const [editingPatient, setEditingPatient] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     dateOfBirth: '',\n//     gender: '',\n//     address: '',\n//     emergencyContact: '',\n//     medicalHistory: '',\n//     status: 'active'\n//   });\n//   const [visitLoadingId, setVisitLoadingId] = useState(null);\n//   const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, [page, searchTerm, statusFilter]);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const data = await apiService.getPatients();\n//       setPatients(data);\n//       setTotalPages(Math.ceil(data.length / 10)); // Assuming 10 items per page\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingPatient) {\n//         // Use _id if available (MongoDB), otherwise use id (mock data)\n//         const patientId = editingPatient._id || editingPatient.id;\n//         await apiService.updatePatient(patientId, formData);\n//       } else {\n//         await apiService.createPatient(formData);\n//       }\n\n//       setOpenDialog(false);\n//       setEditingPatient(null);\n//       resetForm();\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error saving patient:', error);\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       try {\n//         // Use _id if available (MongoDB), otherwise use id (mock data)\n//         const patientId = selectedPatient._id || selectedPatient.id;\n//         await apiService.deletePatient(patientId);\n//         setDeleteDialogOpen(false);\n//         setSelectedPatient(null);\n//         fetchPatients();\n//       } catch (error) {\n//         console.error('Error deleting patient:', error);\n//       }\n//     }\n//   };\n\n//   const handleEdit = (patient) => {\n//     setEditingPatient(patient);\n//     setFormData({\n//       name: patient.name,\n//       email: patient.email,\n//       phone: patient.phone,\n//       dateOfBirth: patient.dateOfBirth ? patient.dateOfBirth.split('T')[0] : '',\n//       gender: patient.gender,\n//       address: patient.address,\n//       emergencyContact: patient.emergencyContact,\n//       medicalHistory: patient.medicalHistory,\n//       status: patient.status || 'active'\n//     });\n//     setOpenDialog(true);\n//   };\n\n//   const resetForm = () => {\n//     setFormData({\n//       name: '',\n//       email: '',\n//       phone: '',\n//       dateOfBirth: '',\n//       gender: '',\n//       address: '',\n//       emergencyContact: '',\n//       medicalHistory: '',\n//       status: 'active'\n//     });\n//   };\n\n//   const handleIncrementVisit = async (patient) => {\n//     setVisitLoadingId(patient._id || patient.id);\n//     try {\n//       await apiService.request(`/patients/${patient._id || patient.id}/treatments`, {\n//         method: 'POST',\n//         body: JSON.stringify({\n//           doctorId: '', // Optional: can be filled if you want to associate a doctor\n//           diagnosis: 'General Visit',\n//           treatment: 'Visit recorded',\n//           notes: 'Visit incremented from patient list.'\n//         }),\n//       });\n//       setSnackbar({ open: true, message: 'Visit count incremented!', severity: 'success' });\n//       fetchPatients();\n//     } catch (error) {\n//       setSnackbar({ open: true, message: 'Failed to increment visit count.', severity: 'error' });\n//     } finally {\n//       setVisitLoadingId(null);\n//     }\n//   };\n\n//   const filteredPatients = patients.filter(patient => {\n//     const matchesSearch = patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//                          patient.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//                          patient.phone.includes(searchTerm);\n//     const matchesStatus = !statusFilter || patient.status === statusFilter;\n//     return matchesSearch && matchesStatus;\n//   });\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case 'active': return 'success';\n//       case 'inactive': return 'error';\n//       case 'pending': return 'warning';\n//       default: return 'default';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString();\n//   };\n\n//   const getInitials = (name) => {\n//     return name\n//       .split(' ')\n//       .map(word => word[0])\n//       .join('')\n//       .toUpperCase()\n//       .slice(0, 2);\n//   };\n\n//   return (\n//     <Box>\n//       <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n//         <Typography variant=\"h4\">Patients</Typography>\n//         <Button\n//           variant=\"contained\"\n//           startIcon={<AddIcon />}\n//           onClick={() => setOpenDialog(true)}\n//         >\n//           Add New Patient\n//         </Button>\n//       </Box>\n\n//       {/* Search and Filters */}\n//       <Card sx={{ mb: 3 }}>\n//         <CardContent>\n//           <Grid container spacing={2} alignItems=\"center\">\n//             <Grid item xs={12} md={6}>\n//               <TextField\n//                 fullWidth\n//                 placeholder=\"Search patients by name, phone, or email...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//                 InputProps={{\n//                   startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\n//                 }}\n//               />\n//             </Grid>\n//             <Grid item xs={12} md={3}>\n//               <FormControl fullWidth>\n//                 <InputLabel>Status</InputLabel>\n//                 <Select\n//                   value={statusFilter}\n//                   label=\"Status\"\n//                   onChange={(e) => setStatusFilter(e.target.value)}\n//                 >\n//                   <MenuItem value=\"\">All</MenuItem>\n//                   <MenuItem value=\"active\">Active</MenuItem>\n//                   <MenuItem value=\"inactive\">Inactive</MenuItem>\n//                   <MenuItem value=\"pending\">Pending</MenuItem>\n//                 </Select>\n//               </FormControl>\n//             </Grid>\n//             <Grid item xs={12} md={3}>\n//               <Button\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 startIcon={<FilterIcon />}\n//                 onClick={() => {\n//                   setSearchTerm('');\n//                   setStatusFilter('');\n//                 }}\n//               >\n//                 Clear Filters\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </CardContent>\n//       </Card>\n\n//       {/* Patients Table */}\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No</TableCell>\n//               <TableCell>Patient</TableCell>\n//               <TableCell>Age/Gender</TableCell>\n//               <TableCell>Contact</TableCell>\n//               <TableCell>Visit Count</TableCell>\n//               <TableCell>Last Visit</TableCell>\n//               <TableCell>Status</TableCell>\n//               <TableCell>Actions</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {filteredPatients.map((patient, index) => (\n//               <TableRow key={patient._id || patient.id} hover>\n//                 <TableCell>\n//                   <Typography variant=\"body2\" fontWeight=\"bold\">\n//                     #{index + 1}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box display=\"flex\" alignItems=\"center\">\n//                     <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\n//                       <PersonIcon />\n//                     </Avatar>\n//                     <Box>\n//                       <Typography variant=\"subtitle2\">{patient.name}</Typography>\n//                       <Typography variant=\"body2\" color=\"textSecondary\">\n//                         {patient.email}\n//                       </Typography>\n//                     </Box>\n//                   </Box>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Typography variant=\"body2\">\n//                     {patient.dateOfBirth ? `${getAge(patient.dateOfBirth)} yrs` : 'N/A'} • {patient.gender || 'N/A'}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box>\n//                     <Box display=\"flex\" alignItems=\"center\" mb={0.5}>\n//                       <EmailIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n//                       <Typography variant=\"body2\">{patient.email}</Typography>\n//                     </Box>\n//                     <Box display=\"flex\" alignItems=\"center\">\n//                       <PhoneIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n//                       <Typography variant=\"body2\">{patient.phone}</Typography>\n//                     </Box>\n//                   </Box>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Chip\n//                     label={patient.visitCount || 0}\n//                     size=\"small\"\n//                     color=\"primary\"\n//                     variant=\"outlined\"\n//                   />\n//                   <Button\n//                     size=\"small\"\n//                     variant=\"contained\"\n//                     color=\"success\"\n//                     sx={{ ml: 1, minWidth: 0, px: 1 }}\n//                     onClick={() => handleIncrementVisit(patient)}\n//                     disabled={visitLoadingId === (patient._id || patient.id)}\n//                   >\n//                     {visitLoadingId === (patient._id || patient.id) ? <CircularProgress size={18} color=\"inherit\" /> : '+'}\n//                   </Button>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Typography variant=\"body2\">\n//                     {patient.lastVisit ? formatDate(patient.lastVisit) : 'Never'}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Chip\n//                     label={patient.status || 'active'}\n//                     size=\"small\"\n//                     color={getStatusColor(patient.status || 'active')}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box display=\"flex\" gap={1}>\n//                     <Tooltip title=\"View Details\">\n//                       <IconButton\n//                         size=\"small\"\n//                         onClick={() => navigate(`/patients/${patient._id || patient.id}`)}\n//                       >\n//                         <ViewIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                     <Tooltip title=\"Edit Patient\">\n//                       <IconButton\n//                         size=\"small\"\n//                         onClick={() => handleEdit(patient)}\n//                       >\n//                         <EditIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                     <Tooltip title=\"Delete Patient\">\n//                       <IconButton\n//                         size=\"small\"\n//                         color=\"error\"\n//                         onClick={() => {\n//                           setSelectedPatient(patient);\n//                           setDeleteDialogOpen(true);\n//                         }}\n//                       >\n//                         <DeleteIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                   </Box>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Pagination */}\n//       {totalPages > 1 && (\n//         <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n//           <Pagination\n//             count={totalPages}\n//             page={page}\n//             onChange={(e, value) => setPage(value)}\n//             color=\"primary\"\n//           />\n//         </Box>\n//       )}\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n//         <DialogTitle>Delete Patient</DialogTitle>\n//         <DialogContent>\n//           <Typography>\n//             Are you sure you want to delete {selectedPatient?.name}? This action cannot be undone.\n//           </Typography>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//           <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\n//             Delete\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n\n//       {/* Add/Edit Dialog */}\n//       <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n//         <DialogTitle>\n//           {editingPatient ? 'Edit Patient' : 'Add New Patient'}\n//         </DialogTitle>\n//         <form onSubmit={handleSubmit}>\n//           <DialogContent>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Full Name\"\n//                   value={formData.name}\n//                   onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Email\"\n//                   type=\"email\"\n//                   value={formData.email}\n//                   onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Phone\"\n//                   value={formData.phone}\n//                   onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Date of Birth\"\n//                   type=\"date\"\n//                   value={formData.dateOfBirth}\n//                   onChange={(e) => setFormData({ ...formData, dateOfBirth: e.target.value })}\n//                   InputLabelProps={{ shrink: true }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <FormControl fullWidth>\n//                   <InputLabel>Gender</InputLabel>\n//                   <Select\n//                     value={formData.gender}\n//                     onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n//                     label=\"Gender\"\n//                   >\n//                     <MenuItem value=\"male\">Male</MenuItem>\n//                     <MenuItem value=\"female\">Female</MenuItem>\n//                     <MenuItem value=\"other\">Other</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <FormControl fullWidth required>\n//                   <InputLabel>Status</InputLabel>\n//                   <Select\n//                     value={formData.status}\n//                     onChange={(e) => setFormData({ ...formData, status: e.target.value })}\n//                     label=\"Status\"\n//                   >\n//                     <MenuItem value=\"active\">Active</MenuItem>\n//                     <MenuItem value=\"inactive\">Inactive</MenuItem>\n//                     <MenuItem value=\"pending\">Pending</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Address\"\n//                   value={formData.address}\n//                   onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Emergency Contact\"\n//                   value={formData.emergencyContact}\n//                   onChange={(e) => setFormData({ ...formData, emergencyContact: e.target.value })}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Medical History\"\n//                   value={formData.medicalHistory}\n//                   onChange={(e) => setFormData({ ...formData, medicalHistory: e.target.value })}\n//                   multiline\n//                   rows={3}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n//             <Button type=\"submit\" variant=\"contained\">\n//               {editingPatient ? 'Update' : 'Add'} Patient\n//             </Button>\n//           </DialogActions>\n//         </form>\n//       </Dialog>\n//     </Box>\n//   );\n// }\n\n// export default Patients; \n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField, Card, CardContent, Grid, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, FormControl, InputLabel, Select, MenuItem, Pagination, Avatar, Tooltip } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Visibility as ViewIcon, Search as SearchIcon, Person as PersonIcon, Phone as PhoneIcon, Email as EmailIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAge(dateOfBirth) {\n  if (!dateOfBirth) return 'N/A';\n  const dob = new Date(dateOfBirth);\n  const diffMs = Date.now() - dob.getTime();\n  const ageDt = new Date(diffMs);\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n}\nfunction Patients() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    gender: '',\n    address: '',\n    emergencyContact: '',\n    medicalHistory: '',\n    status: 'active'\n  });\n  const [visitLoadingId, setVisitLoadingId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPatients();\n  }, [page, searchTerm, statusFilter]);\n  const fetchPatients = async () => {\n    try {\n      const data = await apiService.getPatients();\n      setPatients(data);\n      setTotalPages(Math.ceil(data.length / 10)); // Assuming 10 items per page\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingPatient) {\n        const patientId = editingPatient._id || editingPatient.id;\n        await apiService.updatePatient(patientId, formData);\n      } else {\n        await apiService.createPatient(formData);\n      }\n      setOpenDialog(false);\n      setEditingPatient(null);\n      resetForm();\n      fetchPatients();\n    } catch (error) {\n      console.error('Error saving patient:', error);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this patient?')) {\n      try {\n        const patientId = selectedPatient._id || selectedPatient.id;\n        await apiService.deletePatient(patientId);\n        setDeleteDialogOpen(false);\n        setSelectedPatient(null);\n        fetchPatients();\n      } catch (error) {\n        console.error('Error deleting patient:', error);\n      }\n    }\n  };\n  const handleEdit = patient => {\n    setEditingPatient(patient);\n    setFormData({\n      name: patient.name,\n      email: patient.email,\n      phone: patient.phone,\n      dateOfBirth: patient.dateOfBirth ? patient.dateOfBirth.split('T')[0] : '',\n      gender: patient.gender,\n      address: patient.address,\n      emergencyContact: patient.emergencyContact,\n      medicalHistory: patient.medicalHistory,\n      status: patient.status || 'active'\n    });\n    setOpenDialog(true);\n  };\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      dateOfBirth: '',\n      gender: '',\n      address: '',\n      emergencyContact: '',\n      medicalHistory: '',\n      status: 'active'\n    });\n  };\n  const handleAddVisit = async patientId => {\n    setVisitLoadingId(patientId);\n    try {\n      await apiService.incrementPatientVisit(patientId);\n      fetchPatients();\n    } catch (error) {\n      console.error('Error incrementing visit count:', error);\n    } finally {\n      setVisitLoadingId(null);\n    }\n  };\n  const filteredPatients = patients.filter(patient => {\n    const matchesSearch = patient.name.toLowerCase().includes(searchTerm.toLowerCase()) || patient.email.toLowerCase().includes(searchTerm.toLowerCase()) || patient.phone.includes(searchTerm);\n    const matchesStatus = !statusFilter || patient.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'error';\n      case 'pending':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  const getInitials = name => {\n    return name.split(' ').map(word => word[0]).join('').toUpperCase().slice(0, 2);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Patients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenDialog(true),\n        children: \"Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Search patients by name, phone, or email...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  sx: {\n                    mr: 1,\n                    color: 'text.secondary'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 35\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: statusFilter,\n                label: \"Status\",\n                onChange: e => setStatusFilter(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"active\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"inactive\",\n                  children: \"Inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"outlined\",\n              onClick: () => {\n                setSearchTerm('');\n                setStatusFilter('');\n              },\n              children: \"Clear Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Age/Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Visit Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Last Visit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredPatients.map((patient, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                fontWeight: \"bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    mr: 2,\n                    bgcolor: 'primary.main'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 828,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [patient.dateOfBirth ? `${getAge(patient.dateOfBirth)} yrs` : 'N/A', \" \\u2022 \", patient.gender || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  mb: 0.5,\n                  children: [/*#__PURE__*/_jsxDEV(EmailIcon, {\n                    sx: {\n                      fontSize: 16,\n                      mr: 1,\n                      color: 'text.secondary'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {\n                    sx: {\n                      fontSize: 16,\n                      mr: 1,\n                      color: 'text.secondary'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: patient.visitCount || 0,\n                size: \"small\",\n                color: \"primary\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                sx: {\n                  ml: 1\n                },\n                onClick: () => handleAddVisit(patient._id || patient.id),\n                disabled: visitLoadingId === (patient._id || patient.id),\n                children: visitLoadingId === (patient._id || patient.id) ? 'Adding...' : 'Add Visit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: patient.lastVisit ? formatDate(patient.lastVisit) : 'Never'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: patient.status || 'active',\n                size: \"small\",\n                color: getStatusColor(patient.status || 'active')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                gap: 1,\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"View Details\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => navigate(`/patients/${patient._id || patient.id}`),\n                    children: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 892,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit Patient\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => handleEdit(patient),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 900,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 896,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete Patient\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => {\n                      setSelectedPatient(patient);\n                      setDeleteDialogOpen(true);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 912,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 17\n            }, this)]\n          }, patient._id || patient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: 3,\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        page: page,\n        onChange: (e, value) => setPage(value),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: () => setDeleteDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.name, \"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingPatient ? 'Edit Patient' : 'Add New Patient'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          sx: {\n            minHeight: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Full Name\",\n                value: formData.name,\n                onChange: e => setFormData({\n                  ...formData,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Email\",\n                type: \"email\",\n                value: formData.email,\n                onChange: e => setFormData({\n                  ...formData,\n                  email: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Date of Birth\",\n                type: \"date\",\n                value: formData.dateOfBirth,\n                onChange: e => setFormData({\n                  ...formData,\n                  dateOfBirth: e.target.value\n                }),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: formData.gender,\n                  onChange: e => setFormData({\n                    ...formData,\n                    gender: e.target.value\n                  }),\n                  label: \"Gender\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 990,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Phone\",\n                value: formData.phone,\n                onChange: e => setFormData({\n                  ...formData,\n                  phone: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: formData.status,\n                  onChange: e => setFormData({\n                    ...formData,\n                    status: e.target.value\n                  }),\n                  label: \"Status\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1011,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1013,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Address\",\n                value: formData.address,\n                onChange: e => setFormData({\n                  ...formData,\n                  address: e.target.value\n                }),\n                multiline: true,\n                rows: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Emergency Contact\",\n                value: formData.emergencyContact,\n                onChange: e => setFormData({\n                  ...formData,\n                  emergencyContact: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Medical History\",\n                value: formData.medicalHistory,\n                onChange: e => setFormData({\n                  ...formData,\n                  medicalHistory: e.target.value\n                }),\n                multiline: true,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenDialog(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: [editingPatient ? 'Update' : 'Add', \" Patient\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 749,\n    columnNumber: 5\n  }, this);\n}\n_s(Patients, \"EaVTrONdhucp5PREAMNqS9JTmuA=\", false, function () {\n  return [useNavigate];\n});\n_c = Patients;\nexport default Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","Card","CardContent","Grid","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","FormControl","InputLabel","Select","MenuItem","Pagination","Avatar","Tooltip","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Visibility","ViewIcon","Search","SearchIcon","Person","PersonIcon","Phone","PhoneIcon","Email","EmailIcon","useNavigate","apiService","jsxDEV","_jsxDEV","getAge","dateOfBirth","dob","Date","diffMs","now","getTime","ageDt","Math","abs","getUTCFullYear","Patients","_s","patients","setPatients","loading","setLoading","searchTerm","setSearchTerm","statusFilter","setStatusFilter","page","setPage","totalPages","setTotalPages","selectedPatient","setSelectedPatient","deleteDialogOpen","setDeleteDialogOpen","openDialog","setOpenDialog","editingPatient","setEditingPatient","formData","setFormData","name","email","phone","gender","address","emergencyContact","medicalHistory","status","visitLoadingId","setVisitLoadingId","navigate","fetchPatients","data","getPatients","ceil","length","error","console","handleSubmit","e","preventDefault","patientId","_id","id","updatePatient","createPatient","resetForm","handleDelete","window","confirm","deletePatient","handleEdit","patient","split","handleAddVisit","incrementPatientVisit","filteredPatients","filter","matchesSearch","toLowerCase","includes","matchesStatus","getStatusColor","formatDate","dateString","toLocaleDateString","getInitials","map","word","join","toUpperCase","slice","children","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","sx","container","spacing","item","xs","md","fullWidth","placeholder","value","onChange","target","InputProps","startAdornment","mr","color","label","component","index","hover","fontWeight","bgcolor","fontSize","visitCount","size","ml","disabled","lastVisit","gap","title","mt","count","open","onClose","maxWidth","onSubmit","minHeight","required","type","InputLabelProps","shrink","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Pictures/Screenshots/vs code/patient-requisition-full-app/frontend/src/pages/Patients.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Button,\n//   TextField,\n//   Card,\n//   CardContent,\n//   Grid,\n//   Chip,\n//   IconButton,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   Pagination,\n//   Avatar,\n//   Tooltip,\n//   Accordion,\n//   AccordionSummary,\n//   AccordionDetails,\n//   List,\n//   ListItem,\n//   ListItemText,\n//   Divider,\n//   CircularProgress\n// } from '@mui/material';\n// import {\n//   Add as AddIcon,\n//   Edit as EditIcon,\n//   Delete as DeleteIcon,\n//   Visibility as ViewIcon,\n//   Search as SearchIcon,\n//   FilterList as FilterIcon,\n//   Person as PersonIcon,\n//   Phone as PhoneIcon,\n//   Email as EmailIcon,\n//   LocationOn as LocationIcon,\n//   MedicalServices as MedicalIcon,\n//   ExpandMore as ExpandMoreIcon,\n//   Add as AddTreatmentIcon\n// } from '@mui/icons-material';\n// import { useNavigate } from 'react-router-dom';\n// import apiService from '../services/api';\n// import Snackbar from '@mui/material/Snackbar';\n// import Alert from '@mui/material/Alert';\n\n// function getAge(dateOfBirth) {\n//   if (!dateOfBirth) return 'N/A';\n//   const dob = new Date(dateOfBirth);\n//   const diffMs = Date.now() - dob.getTime();\n//   const ageDt = new Date(diffMs);\n//   return Math.abs(ageDt.getUTCFullYear() - 1970);\n// }\n\n// function Patients() {\n//   const [patients, setPatients] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [statusFilter, setStatusFilter] = useState('');\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n//   const [selectedPatient, setSelectedPatient] = useState(null);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [openDialog, setOpenDialog] = useState(false);\n//   const [editingPatient, setEditingPatient] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     dateOfBirth: '',\n//     gender: '',\n//     address: '',\n//     emergencyContact: '',\n//     medicalHistory: '',\n//     status: 'active'\n//   });\n//   const [visitLoadingId, setVisitLoadingId] = useState(null);\n//   const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, [page, searchTerm, statusFilter]);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const data = await apiService.getPatients();\n//       setPatients(data);\n//       setTotalPages(Math.ceil(data.length / 10)); // Assuming 10 items per page\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingPatient) {\n//         // Use _id if available (MongoDB), otherwise use id (mock data)\n//         const patientId = editingPatient._id || editingPatient.id;\n//         await apiService.updatePatient(patientId, formData);\n//       } else {\n//         await apiService.createPatient(formData);\n//       }\n      \n//       setOpenDialog(false);\n//       setEditingPatient(null);\n//       resetForm();\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error saving patient:', error);\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       try {\n//         // Use _id if available (MongoDB), otherwise use id (mock data)\n//         const patientId = selectedPatient._id || selectedPatient.id;\n//         await apiService.deletePatient(patientId);\n//         setDeleteDialogOpen(false);\n//         setSelectedPatient(null);\n//         fetchPatients();\n//       } catch (error) {\n//         console.error('Error deleting patient:', error);\n//       }\n//     }\n//   };\n\n//   const handleEdit = (patient) => {\n//     setEditingPatient(patient);\n//     setFormData({\n//       name: patient.name,\n//       email: patient.email,\n//       phone: patient.phone,\n//       dateOfBirth: patient.dateOfBirth ? patient.dateOfBirth.split('T')[0] : '',\n//       gender: patient.gender,\n//       address: patient.address,\n//       emergencyContact: patient.emergencyContact,\n//       medicalHistory: patient.medicalHistory,\n//       status: patient.status || 'active'\n//     });\n//     setOpenDialog(true);\n//   };\n\n//   const resetForm = () => {\n//     setFormData({\n//       name: '',\n//       email: '',\n//       phone: '',\n//       dateOfBirth: '',\n//       gender: '',\n//       address: '',\n//       emergencyContact: '',\n//       medicalHistory: '',\n//       status: 'active'\n//     });\n//   };\n\n//   const handleIncrementVisit = async (patient) => {\n//     setVisitLoadingId(patient._id || patient.id);\n//     try {\n//       await apiService.request(`/patients/${patient._id || patient.id}/treatments`, {\n//         method: 'POST',\n//         body: JSON.stringify({\n//           doctorId: '', // Optional: can be filled if you want to associate a doctor\n//           diagnosis: 'General Visit',\n//           treatment: 'Visit recorded',\n//           notes: 'Visit incremented from patient list.'\n//         }),\n//       });\n//       setSnackbar({ open: true, message: 'Visit count incremented!', severity: 'success' });\n//       fetchPatients();\n//     } catch (error) {\n//       setSnackbar({ open: true, message: 'Failed to increment visit count.', severity: 'error' });\n//     } finally {\n//       setVisitLoadingId(null);\n//     }\n//   };\n\n//   const filteredPatients = patients.filter(patient => {\n//     const matchesSearch = patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//                          patient.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//                          patient.phone.includes(searchTerm);\n//     const matchesStatus = !statusFilter || patient.status === statusFilter;\n//     return matchesSearch && matchesStatus;\n//   });\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case 'active': return 'success';\n//       case 'inactive': return 'error';\n//       case 'pending': return 'warning';\n//       default: return 'default';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString();\n//   };\n\n//   const getInitials = (name) => {\n//     return name\n//       .split(' ')\n//       .map(word => word[0])\n//       .join('')\n//       .toUpperCase()\n//       .slice(0, 2);\n//   };\n\n//   return (\n//     <Box>\n//       <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n//         <Typography variant=\"h4\">Patients</Typography>\n//         <Button\n//           variant=\"contained\"\n//           startIcon={<AddIcon />}\n//           onClick={() => setOpenDialog(true)}\n//         >\n//           Add New Patient\n//         </Button>\n//       </Box>\n\n//       {/* Search and Filters */}\n//       <Card sx={{ mb: 3 }}>\n//         <CardContent>\n//           <Grid container spacing={2} alignItems=\"center\">\n//             <Grid item xs={12} md={6}>\n//               <TextField\n//                 fullWidth\n//                 placeholder=\"Search patients by name, phone, or email...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//                 InputProps={{\n//                   startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\n//                 }}\n//               />\n//             </Grid>\n//             <Grid item xs={12} md={3}>\n//               <FormControl fullWidth>\n//                 <InputLabel>Status</InputLabel>\n//                 <Select\n//                   value={statusFilter}\n//                   label=\"Status\"\n//                   onChange={(e) => setStatusFilter(e.target.value)}\n//                 >\n//                   <MenuItem value=\"\">All</MenuItem>\n//                   <MenuItem value=\"active\">Active</MenuItem>\n//                   <MenuItem value=\"inactive\">Inactive</MenuItem>\n//                   <MenuItem value=\"pending\">Pending</MenuItem>\n//                 </Select>\n//               </FormControl>\n//             </Grid>\n//             <Grid item xs={12} md={3}>\n//               <Button\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 startIcon={<FilterIcon />}\n//                 onClick={() => {\n//                   setSearchTerm('');\n//                   setStatusFilter('');\n//                 }}\n//               >\n//                 Clear Filters\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </CardContent>\n//       </Card>\n\n//       {/* Patients Table */}\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No</TableCell>\n//               <TableCell>Patient</TableCell>\n//               <TableCell>Age/Gender</TableCell>\n//               <TableCell>Contact</TableCell>\n//               <TableCell>Visit Count</TableCell>\n//               <TableCell>Last Visit</TableCell>\n//               <TableCell>Status</TableCell>\n//               <TableCell>Actions</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {filteredPatients.map((patient, index) => (\n//               <TableRow key={patient._id || patient.id} hover>\n//                 <TableCell>\n//                   <Typography variant=\"body2\" fontWeight=\"bold\">\n//                     #{index + 1}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box display=\"flex\" alignItems=\"center\">\n//                     <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\n//                       <PersonIcon />\n//                     </Avatar>\n//                     <Box>\n//                       <Typography variant=\"subtitle2\">{patient.name}</Typography>\n//                       <Typography variant=\"body2\" color=\"textSecondary\">\n//                         {patient.email}\n//                       </Typography>\n//                     </Box>\n//                   </Box>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Typography variant=\"body2\">\n//                     {patient.dateOfBirth ? `${getAge(patient.dateOfBirth)} yrs` : 'N/A'} • {patient.gender || 'N/A'}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box>\n//                     <Box display=\"flex\" alignItems=\"center\" mb={0.5}>\n//                       <EmailIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n//                       <Typography variant=\"body2\">{patient.email}</Typography>\n//                     </Box>\n//                     <Box display=\"flex\" alignItems=\"center\">\n//                       <PhoneIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n//                       <Typography variant=\"body2\">{patient.phone}</Typography>\n//                     </Box>\n//                   </Box>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Chip\n//                     label={patient.visitCount || 0}\n//                     size=\"small\"\n//                     color=\"primary\"\n//                     variant=\"outlined\"\n//                   />\n//                   <Button\n//                     size=\"small\"\n//                     variant=\"contained\"\n//                     color=\"success\"\n//                     sx={{ ml: 1, minWidth: 0, px: 1 }}\n//                     onClick={() => handleIncrementVisit(patient)}\n//                     disabled={visitLoadingId === (patient._id || patient.id)}\n//                   >\n//                     {visitLoadingId === (patient._id || patient.id) ? <CircularProgress size={18} color=\"inherit\" /> : '+'}\n//                   </Button>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Typography variant=\"body2\">\n//                     {patient.lastVisit ? formatDate(patient.lastVisit) : 'Never'}\n//                   </Typography>\n//                 </TableCell>\n//                 <TableCell>\n//                   <Chip\n//                     label={patient.status || 'active'}\n//                     size=\"small\"\n//                     color={getStatusColor(patient.status || 'active')}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <Box display=\"flex\" gap={1}>\n//                     <Tooltip title=\"View Details\">\n//                       <IconButton\n//                         size=\"small\"\n//                         onClick={() => navigate(`/patients/${patient._id || patient.id}`)}\n//                       >\n//                         <ViewIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                     <Tooltip title=\"Edit Patient\">\n//                       <IconButton\n//                         size=\"small\"\n//                         onClick={() => handleEdit(patient)}\n//                       >\n//                         <EditIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                     <Tooltip title=\"Delete Patient\">\n//                       <IconButton\n//                         size=\"small\"\n//                         color=\"error\"\n//                         onClick={() => {\n//                           setSelectedPatient(patient);\n//                           setDeleteDialogOpen(true);\n//                         }}\n//                       >\n//                         <DeleteIcon />\n//                       </IconButton>\n//                     </Tooltip>\n//                   </Box>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Pagination */}\n//       {totalPages > 1 && (\n//         <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n//           <Pagination\n//             count={totalPages}\n//             page={page}\n//             onChange={(e, value) => setPage(value)}\n//             color=\"primary\"\n//           />\n//         </Box>\n//       )}\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n//         <DialogTitle>Delete Patient</DialogTitle>\n//         <DialogContent>\n//           <Typography>\n//             Are you sure you want to delete {selectedPatient?.name}? This action cannot be undone.\n//           </Typography>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//           <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\n//             Delete\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n\n//       {/* Add/Edit Dialog */}\n//       <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n//         <DialogTitle>\n//           {editingPatient ? 'Edit Patient' : 'Add New Patient'}\n//         </DialogTitle>\n//         <form onSubmit={handleSubmit}>\n//           <DialogContent>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Full Name\"\n//                   value={formData.name}\n//                   onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Email\"\n//                   type=\"email\"\n//                   value={formData.email}\n//                   onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Phone\"\n//                   value={formData.phone}\n//                   onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n//                   required\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Date of Birth\"\n//                   type=\"date\"\n//                   value={formData.dateOfBirth}\n//                   onChange={(e) => setFormData({ ...formData, dateOfBirth: e.target.value })}\n//                   InputLabelProps={{ shrink: true }}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <FormControl fullWidth>\n//                   <InputLabel>Gender</InputLabel>\n//                   <Select\n//                     value={formData.gender}\n//                     onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n//                     label=\"Gender\"\n//                   >\n//                     <MenuItem value=\"male\">Male</MenuItem>\n//                     <MenuItem value=\"female\">Female</MenuItem>\n//                     <MenuItem value=\"other\">Other</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <FormControl fullWidth required>\n//                   <InputLabel>Status</InputLabel>\n//                   <Select\n//                     value={formData.status}\n//                     onChange={(e) => setFormData({ ...formData, status: e.target.value })}\n//                     label=\"Status\"\n//                   >\n//                     <MenuItem value=\"active\">Active</MenuItem>\n//                     <MenuItem value=\"inactive\">Inactive</MenuItem>\n//                     <MenuItem value=\"pending\">Pending</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Address\"\n//                   value={formData.address}\n//                   onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} md={6}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Emergency Contact\"\n//                   value={formData.emergencyContact}\n//                   onChange={(e) => setFormData({ ...formData, emergencyContact: e.target.value })}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   fullWidth\n//                   label=\"Medical History\"\n//                   value={formData.medicalHistory}\n//                   onChange={(e) => setFormData({ ...formData, medicalHistory: e.target.value })}\n//                   multiline\n//                   rows={3}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n//             <Button type=\"submit\" variant=\"contained\">\n//               {editingPatient ? 'Update' : 'Add'} Patient\n//             </Button>\n//           </DialogActions>\n//         </form>\n//       </Dialog>\n//     </Box>\n//   );\n// }\n\n// export default Patients; \n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Pagination,\n  Avatar,\n  Tooltip\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Visibility as ViewIcon,\n  Search as SearchIcon,\n  Person as PersonIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport apiService from '../services/api';\n\nfunction getAge(dateOfBirth) {\n  if (!dateOfBirth) return 'N/A';\n  const dob = new Date(dateOfBirth);\n  const diffMs = Date.now() - dob.getTime();\n  const ageDt = new Date(diffMs);\n  return Math.abs(ageDt.getUTCFullYear() - 1970);\n}\n\nfunction Patients() {\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    gender: '',\n    address: '',\n    emergencyContact: '',\n    medicalHistory: '',\n    status: 'active'\n  });\n  const [visitLoadingId, setVisitLoadingId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPatients();\n  }, [page, searchTerm, statusFilter]);\n\n  const fetchPatients = async () => {\n    try {\n      const data = await apiService.getPatients();\n      setPatients(data);\n      setTotalPages(Math.ceil(data.length / 10)); // Assuming 10 items per page\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingPatient) {\n        const patientId = editingPatient._id || editingPatient.id;\n        await apiService.updatePatient(patientId, formData);\n      } else {\n        await apiService.createPatient(formData);\n      }\n      setOpenDialog(false);\n      setEditingPatient(null);\n      resetForm();\n      fetchPatients();\n    } catch (error) {\n      console.error('Error saving patient:', error);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this patient?')) {\n      try {\n        const patientId = selectedPatient._id || selectedPatient.id;\n        await apiService.deletePatient(patientId);\n        setDeleteDialogOpen(false);\n        setSelectedPatient(null);\n        fetchPatients();\n      } catch (error) {\n        console.error('Error deleting patient:', error);\n      }\n    }\n  };\n\n  const handleEdit = (patient) => {\n    setEditingPatient(patient);\n    setFormData({\n      name: patient.name,\n      email: patient.email,\n      phone: patient.phone,\n      dateOfBirth: patient.dateOfBirth ? patient.dateOfBirth.split('T')[0] : '',\n      gender: patient.gender,\n      address: patient.address,\n      emergencyContact: patient.emergencyContact,\n      medicalHistory: patient.medicalHistory,\n      status: patient.status || 'active'\n    });\n    setOpenDialog(true);\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      dateOfBirth: '',\n      gender: '',\n      address: '',\n      emergencyContact: '',\n      medicalHistory: '',\n      status: 'active'\n    });\n  };\n\n  const handleAddVisit = async (patientId) => {\n    setVisitLoadingId(patientId);\n    try {\n      await apiService.incrementPatientVisit(patientId);\n      fetchPatients();\n    } catch (error) {\n      console.error('Error incrementing visit count:', error);\n    } finally {\n      setVisitLoadingId(null);\n    }\n  };\n\n  const filteredPatients = patients.filter(patient => {\n    const matchesSearch = patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         patient.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         patient.phone.includes(searchTerm);\n    const matchesStatus = !statusFilter || patient.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'success';\n      case 'inactive': return 'error';\n      case 'pending': return 'warning';\n      default: return 'default';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const getInitials = (name) => {\n    return name\n      .split(' ')\n      .map(word => word[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">Patients</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => setOpenDialog(true)}\n        >\n          Add New Patient\n        </Button>\n      </Box>\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} md={7}>\n              <TextField\n                fullWidth\n                placeholder=\"Search patients by name, phone, or email...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                InputProps={{\n                  startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />, \n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={statusFilter}\n                  label=\"Status\"\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                >\n                  <MenuItem value=\"\">All</MenuItem>\n                  <MenuItem value=\"active\">Active</MenuItem>\n                  <MenuItem value=\"inactive\">Inactive</MenuItem>\n                  <MenuItem value=\"pending\">Pending</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <Button\n                fullWidth\n                variant=\"outlined\"\n                onClick={() => {\n                  setSearchTerm('');\n                  setStatusFilter('');\n                }}\n              >\n                Clear Filters\n              </Button>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>S.No</TableCell>\n              <TableCell>Patient</TableCell>\n              <TableCell>Age/Gender</TableCell>\n              <TableCell>Contact</TableCell>\n              <TableCell>Visit Count</TableCell>\n              <TableCell>Last Visit</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredPatients.map((patient, index) => (\n              <TableRow key={patient._id || patient.id} hover>\n                <TableCell>\n                  <Typography variant=\"body2\" fontWeight=\"bold\">\n                    #{index + 1}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\n                      <PersonIcon />\n                    </Avatar>\n                    <Box>\n                      <Typography variant=\"subtitle2\">{patient.name}</Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {patient.email}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"body2\">\n                    {patient.dateOfBirth ? `${getAge(patient.dateOfBirth)} yrs` : 'N/A'} • {patient.gender || 'N/A'}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Box>\n                    <Box display=\"flex\" alignItems=\"center\" mb={0.5}>\n                      <EmailIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n                      <Typography variant=\"body2\">{patient.email}</Typography>\n                    </Box>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <PhoneIcon sx={{ fontSize: 16, mr: 1, color: 'text.secondary' }} />\n                      <Typography variant=\"body2\">{patient.phone}</Typography>\n                    </Box>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    label={patient.visitCount || 0}\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                  />\n                  <Button\n                    size=\"small\"\n                    variant=\"outlined\"\n                    sx={{ ml: 1 }}\n                    onClick={() => handleAddVisit(patient._id || patient.id)}\n                    disabled={visitLoadingId === (patient._id || patient.id)}\n                  >\n                    {visitLoadingId === (patient._id || patient.id) ? 'Adding...' : 'Add Visit'}\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"body2\">\n                    {patient.lastVisit ? formatDate(patient.lastVisit) : 'Never'}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    label={patient.status || 'active'}\n                    size=\"small\"\n                    color={getStatusColor(patient.status || 'active')}\n                  />\n                </TableCell>\n                <TableCell>\n                  <Box display=\"flex\" gap={1}>\n                    <Tooltip title=\"View Details\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => navigate(`/patients/${patient._id || patient.id}`)}\n                      >\n                        <ViewIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Edit Patient\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleEdit(patient)}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete Patient\">\n                      <IconButton\n                        size=\"small\"\n                        color=\"error\"\n                        onClick={() => {\n                          setSelectedPatient(patient);\n                          setDeleteDialogOpen(true);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {totalPages > 1 && (\n        <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n          <Pagination\n            count={totalPages}\n            page={page}\n            onChange={(e, value) => setPage(value)}\n            color=\"primary\"\n          />\n        </Box>\n      )}\n      <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n        <DialogTitle>Delete Patient</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete {selectedPatient?.name}? This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>{editingPatient ? 'Edit Patient' : 'Add New Patient'}</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent sx={{ minHeight: 400 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Full Name\"\n                  value={formData.name}\n                  onChange={e => setFormData({ ...formData, name: e.target.value })}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={e => setFormData({ ...formData, email: e.target.value })}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Date of Birth\"\n                  type=\"date\"\n                  value={formData.dateOfBirth}\n                  onChange={e => setFormData({ ...formData, dateOfBirth: e.target.value })}\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Gender</InputLabel>\n                  <Select\n                    value={formData.gender}\n                    onChange={e => setFormData({ ...formData, gender: e.target.value })}\n                    label=\"Gender\"\n                  >\n                    <MenuItem value=\"male\">Male</MenuItem>\n                    <MenuItem value=\"female\">Female</MenuItem>\n                    <MenuItem value=\"other\">Other</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Phone\"\n                  value={formData.phone}\n                  onChange={e => setFormData({ ...formData, phone: e.target.value })}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Status</InputLabel>\n                  <Select\n                    value={formData.status}\n                    onChange={e => setFormData({ ...formData, status: e.target.value })}\n                    label=\"Status\"\n                  >\n                    <MenuItem value=\"active\">Active</MenuItem>\n                    <MenuItem value=\"inactive\">Inactive</MenuItem>\n                    <MenuItem value=\"pending\">Pending</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Address\"\n                  value={formData.address}\n                  onChange={e => setFormData({ ...formData, address: e.target.value })}\n                  multiline\n                  rows={2}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Emergency Contact\"\n                  value={formData.emergencyContact}\n                  onChange={e => setFormData({ ...formData, emergencyContact: e.target.value })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Medical History\"\n                  value={formData.medicalHistory}\n                  onChange={e => setFormData({ ...formData, medicalHistory: e.target.value })}\n                  multiline\n                  rows={3}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n            <Button type=\"submit\" variant=\"contained\">{editingPatient ? 'Update' : 'Add'} Patient</Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default Patients; "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}